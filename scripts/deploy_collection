#!/bin/bash

#
# Deploy Collection 
#

exitWithError ()
{
    echo "$1" 1>&2
    exit 1
}


exitWithUsage ()
{
    echo "$1" 1>&2
    usage
    exit 1
}


usage ()
{
    cat << EOF

USAGE: `basename $0` options

OPTIONS:
   --mode         (required) [local|cloud]
   --corpus       (optional - default: maroco)   maroco/palestine1/palestine2/france/...
   --type         (optional - default: ediasporas) [ediasporas]   
   --nb_shards    (optional - default: 2)
   --nb_replica   (optional - default: 2)
   --help         (optional) displays this message

EOF
}


init ()
{
    MODE=local
    NB_SHARDS=2
    NB_REPLICA=2

    while getopts ":-:" OPTION
    do
        LONG_OPTION="${OPTARG%%=*}"
        OPTARG="${OPTARG#*=}"

        case $LONG_OPTION in
            mode)
                MODE=${OPTARG}
                ;;

            corpus)
                CORPUS=${OPTARG}
                ;;

            type)
                TYPE=${OPTARG}
                ;; 

            nb_shards)
                NB_SHARDS=${OPTARG}
                ;; 

            nb_replica)
                NB_REPLICA=${OPTARG}
                ;;                 

            help) 
                usage ; 
                exit 0
                ;;

            *) 
                echo "Unknown option ${LONG_OPTION}" ; 
                usage ; 
                exit 1 
                ;;
        esac
    done

    if [ "${MODE}" = "" ]; then
        exitWithUsage "a required option is missing."
    fi

    if  [ "${MODE}" != "local" ] && [ "${MODE}" != "cloud" ]; then
        exitWithUsage "unknown value ${MODE} for option mode."
    fi

    if [ "${MODE}" = "local" ]; then
        . conf/.conf_solr
    else
        . conf/.conf_solr_cloud
    fi
}

make_directory_local ()
{
    if [ ! -f ${SOLR_CORES}/solr.xml ]; then
        cp ../source_collection/conf/solr.xml ${SOLR_CORES}/
    fi

    if [ ! -f ${SOLR_CORES}/zoo.cfg ]; then
        cp ../source_collection/conf/zoo.cfg ${SOLR_CORES}/
    fi  

    if [ ! -f ${SOLR_CORES}/logback.xml ]; then
        cp ../source_collection/conf/$2/logback.xml ${SOLR_CORES}/
    fi     

    mkdir -p ${SOLR_CORES}/$1
    mkdir -p ${SOLR_CORES}/$1/conf
    mkdir -p ${SOLR_CORES}/$1/data
    mkdir -p ${SOLR_CORES}/$1/data/index  

    cp ../source_collection/conf/core.properties ${SOLR_CORES}/$1/
    cp ../source_collection/conf/$2/$3/schema.xml ${SOLR_CORES}/$1/conf/
    cp ../source_collection/conf/$2/$3/solrconfig.xml ${SOLR_CORES}/$1/conf/
}

config_core ()
{
    # When local mode we speek about core instead of collection
    
    CORE_CONF=

    CORE_CONF="${CORE_CONF}name=$1"

    cat ${SOLR_CORES}/$1/core.properties | sed "s#__CORES__#${CORE_CONF}#g" > ${SOLR_CORES}/$1/core.properties_tmp
    mv ${SOLR_CORES}/$1/core.properties_tmp ${SOLR_CORES}/$1/core.properties
}

config_collection ()
{

    cp ../source_collection/conf/solr.xml ${SOLR_CORES}/

    ZOO_CONF=

    IFS=' ' read -r -a SERVERS <<< "${ZOOKEEPER_SERVERS_LIST}"

    for SERVER in "${SERVERS[@]}"
    do
        IFS=':' read -r -a IP <<< "${SERVER}"
        ZOO_CONF="${ZOO_CONF}${IP[0]}:${ZOOKEEPER_CLIENT_PORT},"
    done    

    ZOO_CONF="<str name=\"zkHost\">${ZOO_CONF}</str>"

    cat ${SOLR_CORES}/solr.xml | sed "s#<!-- __ZOO_HOST__ -->#${ZOO_CONF}#g" > ${SOLR_CORES}/solr.xml_tmp
    mv ${SOLR_CORES}/solr.xml_tmp ${SOLR_CORES}/solr.xml
}

make_collection ()
{

    mkdir -p ${SOLR_CORES}/$1
    mkdir -p ${SOLR_CORES}/$1/conf

    cp ../source_collection/conf/$2/$3/schema.xml ${SOLR_CORES}/$1/conf/
    cp ../source_collection/conf/$2/$3/solrconfig.xml ${SOLR_CORES}/$1/conf/    

    # Start Zookeeper

    if ! ${ZOOKEEPER_ROOT}/bin/zkServer.sh start; then
        printf '%s\n' 'Zookeeper could not start !' >&2
        exit 1
    fi

    # Start Solr

    if ! ${SOLR_ROOT}/bin/solr start -p ${SOLR_PORT} -Dsolr.version=${SOLR_VERSION} -Dsolr.root=${SOLR_ROOT}; then
        printf '%s\n' 'Solr could not start !' >&2
        exit 1
    fi

    # Make collection

    if ! ${SOLR_ROOT}/bin/solr create_collection -c $1 -d ${SOLR_CORES}/$1/conf -n $1 -shards ${NB_SHARDS} -replicationFactor ${NB_REPLICA}; then
        printf '%s\n' 'Collection could not be created !' >&2
        exit 1
    fi  

    # Stop Solr

    if ! ${SOLR_ROOT}/bin/solr stop; then
        printf '%s\n' 'Solr could not Stop !' >&2
        exit 1
    fi      

    # Stop Zookeeper

    if ! ${ZOOKEEPER_ROOT}/bin/zkServer.sh stop; then
        printf '%s\n' 'Zookeeper could not stop !' >&2
        exit 1
    fi
}

install ()
{
    echo "${MODE} installation of collection ${TYPE}_${CORPUS} ..."

    COLLECTION_NAME="${TYPE}_${CORPUS}" 

    if [ "${MODE}" = "local" ]; then
        make_directory_local ${COLLECTION_NAME} ${TYPE} ${CORPUS}
        config_core ${COLLECTION_NAME}
    else
        config_collection
        make_collection ${COLLECTION_NAME} ${TYPE} ${CORPUS}
    fi
}

init "$@"

install
